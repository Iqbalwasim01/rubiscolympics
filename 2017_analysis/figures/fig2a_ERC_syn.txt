DATASET_SIMPLEBAR
#In simple bar charts, each ID is associated to a single numeric value which is displayed as a bar outside the tree.
#lines starting with a hash are comments and ignored during parsing

#=================================================================#
#                    MANDATORY SETTINGS                           #
#=================================================================#
#select the separator which is used to delimit the data below (TAB,SPACE or COMMA).This separator must be used throughout this file (except in the SEPARATOR line, which uses space).
#SEPARATOR TAB
#SEPARATOR SPACE
SEPARATOR COMMA

#label is used in the legend table (can be changed later)
DATASET_LABEL,label 1

#dataset color (can be changed later)
COLOR,#ff0000

#=================================================================#
#                    OPTIONAL SETTINGS                            #
#=================================================================#
#dataset scale: you can simply set the values where the scale will be drawn
#DATASET_SCALE,2000,10000,20000
#or you can specify value, label and color for each scale line (dash separated, format: VALUE-LABEL-COLOR) 
#DATASET_SCALE,2000-2k line-#0000ff,10000-line at 10k-#ff0000,20000

#each dataset can have a legend, which is defined below
#for each row in the legend, there should be one shape, color and label
#shape should be a number between 1 and 6:
#1: square
#2: circle
#3: star
#4: right pointing triangle
#5: left pointing triangle
#6: checkmark

#LEGEND_TITLE,Dataset legend
#LEGEND_SHAPES,1,2,3
#LEGEND_COLORS,#ff0000,#00ff00,#0000ff
#LEGEND_LABELS,value1,value2,value3


#=================================================================#
#     all other optional settings can be set or changed later     #
#           in the web interface (under 'Datasets' tab)           #
#=================================================================#
#all other optional settings can be set or changed later in the web interface (under 'Datasets' tab)

#maximum width
#WIDTH,1000

#left margin, used to increase/decrease the spacing to the next dataset. Can be negative, causing datasets to overlap.
#MARGIN,0

#always show internal values; if set, values associated to internal nodes will be displayed even if these nodes are not collapsed. It could cause overlapping in the dataset display.
#SHOW_INTERNAL,0

#bar height factor; Default bar height will be slightly less than the available space between leaves, but you can set a multiplication factor here to increase/decrease it (values from 0 to 1 will decrease it, values above 1 will increase it)
#HEIGHT_FACTOR,1

#Display individual values above the bars
#SHOW_VALUE,0

#Bars are aligned to the node lines by default. Using BAR_SHIFT, you can move them all up/down by a fixed amount
#BAR_SHIFT,0

#BAR_ZERO specifies which dataset value will be used as a starting point for drawing the bars. Dataset values smaller than BAR_ZERO will be displayed to the left (possibly overlapping the tree, unless MARGIN is increased)
#BAR_ZERO,0

#border width; if set above 0, a border of specified width (in pixels) will be drawn around the bars
#BORDER_WIDTH,0

#border color; used when BORDER_WIDTH is above 0
#BORDER_COLOR,#0000ff

#Internal tree nodes can be specified using IDs directly, or using the 'last common ancestor' method described in iTOL help pages
#=================================================================#
#       Actual data follows after the "DATA" keyword              #
#=================================================================#
DATA
#ID1,value1
#ID2,value2
#9606,10000
#LEAF1|LEAF2,11000
CG09_land_8_20_14_0.10_scaffold_8073_10,1.0
Crystal_Geyser_CG15_big_fil_post_rev_8_21_14_0.20_scaffold_4700_5,1.0
GWA2_Gallionellales_59_43_gwa2_scaffold_2131_28,1.0
RBC2_36,1.0
RBC2_37,1.0
RBC2_4,1.0
RBC2_42,1.0
RBC2_44,1.0
RBC2_50,1.0
RBC3_1,1.0
RBC3_4,1.0
RBC4_11,1.0
RBC4_12,1.0
RBC4_13,1.0
RBC4_14,1.0
RBC4_16,1.0
RBC4_17,1.0
RBC4_18,1.0
RBC4_20,1.0
RBC4_21,1.0
RBC4_23,1.0
RBC4_26,1.0
RBC4_27,1.0
RBC4_28,1.0
RBC4_29,1.0
RBC4_30,1.0
RBC4_31,1.0
RBC4_32,1.0
RBC4_34,1.0
RBC4_35,1.0
RBC4_37,1.0
RBC4_38,1.0
RBC4_39,1.0
RBC4_4,1.0
RBC4_40,1.0
RBC4_41,1.0
RBC4_42,1.0
RBC4_43,1.0
RBC4_44,1.0
RBC4_45,1.0
RBC4_46,1.0
RBC4_47,1.0
RBC4_5,1.0
RBC4_50,1.0
RBC4_51,1.0
RBC4_52,1.0
RBC4_53,1.0
RBC4_57,1.0
RBC4_58,1.0
RBC4_6,1.0
RBC4_60,1.0
RBC4_61,1.0
RBC4_62,1.0
RBC4_64,1.0
RBC4_65,1.0
RBC4_66,1.0
RBC4_67,1.0
RBC4_68,1.0
RBC4_69,1.0
RBC4_70,1.0
RBC4_71,1.0
RBC4_72,1.0
RBC4_73,1.0
RBC4_74,1.0
RBC4_75,1.0
RBC4_8,1.0
RBC4_9,1.0
RBCSeed_1,1.0
RBCSeed_10,1.0
RBCSeed_11,1.0
RBCSeed_12,1.0
RBCSeed_13,1.0
RBCSeed_14,1.0
RBCSeed_15,1.0
RBCSeed_16,1.0
RBCSeed_18,1.0
RBCSeed_19,1.0
RBCSeed_2,1.0
RBCSeed_20,1.0
RBCSeed_21,1.0
RBCSeed_22,1.0
RBCSeed_23,1.0
RBCSeed_24,1.0
RBCSeed_25,1.0
RBCSeed_27,1.0
RBCSeed_28,1.0
RBCSeed_30,1.0
RBCSeed_31,1.0
RBCSeed_32,1.0
RBCSeed_33,1.0
RBCSeed_34,1.0
RBCSeed_35,1.0
RBCSeed_47,1.0
RBCSeed_48,1.0
RBCSeed_5,1.0
RBCSeed_6,1.0
RBC_13,1.0
RBC_14,1.0
RBC_16,1.0
RBC_18,1.0
RBC_2,1.0
RBC_22,1.0
RBC_30,1.0
RBC_31,1.0
RBC_33,1.0
RBC_38,1.0
RBC_41,1.0
RBC_49,1.0
RBC_50,1.0
RBC_54,1.0
RBC_7,1.0
RBC_73,1.0
RBC_76,1.0
RBC_81,1.0
RBC_82,1.0
RBC_87,1.0
RBC_9,1.0
RBC_94,1.0
RBG_16_Gammaproteobacteria_62_13_RBG_16_scaffold_11150_2,1.0
TARA_037.SAMEA2619974.600.0.1-0.22_5152_3,1.0
gi|1011805430|ref|WP_062625813.1|,1.0
gi|1057283888|ref|WP_068647475.1|,1.0
gi|1133712163|ref|WP_076097556.1|,1.0
gi|1176749570|gb|OQY67889.1|,1.0
gi|1222002227|ref|WP_090060133.1|,1.0
gi|1232577783|gb|OYY18796.1|,1.0
gi|1232622198|gb|OYY58774.1|,1.0
gi|1232663288|gb|OYY95573.1|,1.0
gi|2978568|gb|AAC38280.1|,1.0
gi|363498367|gb|AAQ04822.2|AF463409_1,1.0
gi|501317133|ref|WP_012348768.1|,1.0
gi|503280792|ref|WP_013515453.1|,1.0
gi|505095037|ref|WP_015282139.1|,1.0
gi|506245642|ref|WP_015765417.1|,1.0
gi|517693989|ref|WP_018864197.1|,1.0
gi|545575122|gb|AGW32479.1|,1.0
gi|821538595|ref|WP_046860475.1|,1.0
gi|919165722|ref|WP_052721353.1|,1.0
gi|985594837|ref|WP_060834338.1|,1.0
gwc1_scaffold_1186_37,1.0
gwf2_scaffold_583_77,1.0
